[{"D:\\Stuff\\React\\beer-brands\\src\\App.js":"1","D:\\Stuff\\React\\beer-brands\\src\\index.js":"2"},{"size":5706,"mtime":1606561643493,"results":"3","hashOfConfig":"4"},{"size":1091,"mtime":1606560346608,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1shf4zp",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Stuff\\React\\beer-brands\\src\\App.js",["11"],"import React, { useState } from 'react';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { trackPromise } from 'react-promise-tracker';\nimport './App.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: '120ch',\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: 'inline',\n    fontSize: 20\n  },\n  primary:{\n    fontSize: 30\n  },\n  image: {\n    width: 150,\n    height: 150,\n    borderRadius: 100 / 2,\n    overflow: \"hidden\",\n    borderWidth: 3,\n    borderColor: \"red\",\n    margin:10\n  },\n  search: {\n    width: '36ch'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [brands, setBrands] = useState(null);\n  const[search, setSearch] = useState('');\n\n  const searchSpace=(event)=>{\n    let keyword = event.target.value;\n    setSearch(keyword)\n  }\n\n  const fetchData = async () => {\n    const response = await trackPromise(axios.get(\n      'https://s3-ap-southeast-1.amazonaws.com/he-public-data/beercraft5bac38c.json'\n    ));\n    \n    const responseImage = await axios.get(\n      'https://s3-ap-southeast-1.amazonaws.com/he-public-data/beerimages7e0480d.json'\n    );\n\n    const imageData = responseImage.data;\n\n    const data = response.data;\n\n    var j = 0;\n    for(let i=0; i<data.length; i++){\n      if(j===imageData.length -1){\n        j = 0\n        data[i].image = imageData[j]\n      }\n      else{\n        data[i].image = imageData[j]\n        j++;\n      }\n    }\n    setBrands(data);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Beer Brands</h1>\n      <h2>Fetch the list of beer brands </h2>\n\n      {/* Fetch data from API */}\n      <div>\n        <button className=\"fetch-button\" onClick={fetchData}>\n          Fetch the List !\n        </button>\n        <br />\n      </div>\n\n      {/* Display data from API */}\n      <div className=\"books\">\n        <div className={classes.search}>\n          <TextField id=\"outlined-basic\" label=\"Search By Name\" variant=\"outlined\" onChange={(e)=>searchSpace(e)} />\n        </div>\n      <List className={classes.root}>\n        {brands &&\n          brands.filter((data) => {\n            if(search === ''){\n              return data\n            }\n            else if(data.name.toLowerCase().includes(search.toLowerCase())){\n              return data\n            }\n          }).map((brand, index) => {\n            if(brand.ibu === \"\"){\n              return (\n                <div className=\"beer brand\" key={index}>\n                  <ListItem >\n                    <img src={brand.image.image} alt=\"Beer_Image\" className={classes.image} />\n                    <ListItemText\n                      primary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.primary}\n                          >\n                            {brand.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textSecondary\"\n                          >\n                          \n                          ID: {brand.id}  Style: {brand.style} Ounces: {brand.ounces}  abv:{brand.abv}  ibu: None\n                        </Typography>\n                        </React.Fragment>\n                        }\n                    />\n                    \n                  </ListItem>\n                  <Divider variant=\"inset\" component=\"li\" />\n                </div>\n              );\n            }\n            else{\n              return (\n                <div className=\"beer brand\" key={index}>\n                  <ListItem >\n                    <img src={brand.image.image} alt=\"Beer_Image\" className={classes.image} />\n                    <ListItemText\n                      primary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.primary}\n                          >\n                            {brand.name}\n                          </Typography>\n                        </React.Fragment>\n                      }\n                      secondary={\n                        <React.Fragment>\n                          <Typography\n                            component=\"span\"\n                            variant=\"body2\"\n                            className={classes.inline}\n                            color=\"textSecondary\"\n                          >\n                          \n                          ID: {brand.id}  Style: {brand.style} Ounces: {brand.ounces}  abv:{brand.abv}  ibu:{brand.ibu}\n                        </Typography>\n                        </React.Fragment>\n                        }\n                    />\n                    \n                  </ListItem>\n                  <Divider variant=\"inset\" component=\"li\" />\n                </div>\n              );\n            }\n          })}\n          </List> \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\Stuff\\React\\beer-brands\\src\\index.js",[],{"ruleId":"12","severity":1,"message":"13","line":97,"column":32,"nodeType":"14","messageId":"15","endLine":97,"endColumn":34},"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd"]